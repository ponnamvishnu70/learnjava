<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
		http://www.springframework.org/schema/jdbc 
		http://www.springframework.org/schema/jdbc/spring-jdbc-3.2.xsd">

	<!-- connect to database -->
	<bean id="dataSource"
		class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName"
			value="oracle.jdbc.OracleDriver" />
		<property name="url"
			value="jdbc:oracle:thin:@localhost:1521/orcl" />
		<property name="username" value="StockTrading" />
		<property name="password" value="vponnam70" />
	</bean>

	<bean id="transactionManager"
		class="org.springframework.batch.support.transaction.ResourcelessTransactionManager" />

	<bean id="jobRepository"
		class="org.springframework.batch.core.repository.support.JobRepositoryFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="transactionManager" ref="transactionManager" />
		<property name="databaseType" value="Oracle" />
	</bean>
	<bean id="jobLauncher"
		class="org.springframework.batch.core.launch.support.SimpleJobLauncher">
		<property name="jobRepository" ref="jobRepository" />
	</bean>

	<!-- create job-meta tables automatically -->
	<jdbc:initialize-database
		data-source="dataSource" enabled="false">
		<jdbc:script
			location="org/springframework/batch/core/schema-drop-oracle10g.sql" />
		<jdbc:script
			location="org/springframework/batch/core/schema-oracle10g.sql" />
	</jdbc:initialize-database>
	<bean id="printTasklet"
		class="learnjava.practice.springbatch.tasklet.PrintTasklet" />
	<bean id="cvsFileItemReader"
		class="org.springframework.batch.item.file.FlatFileItemReader">
		<property name="resource">
		<bean class="org.springframework.core.io.FileSystemResource">
		<constructor-arg name="path" value="T:\\data\\eoddata\\eight\\Output.csv"></constructor-arg>
		</bean>
			</property>
		<property name="lineMapper">
			<bean class="org.springframework.batch.item.file.mapping.DefaultLineMapper">
				<property name="lineTokenizer">
					<bean class="org.springframework.batch.item.file.transform.DelimitedLineTokenizer">
						<property name="names"
							value="timeStamp,openPrice,highPrice,lowPrice,closePrice,adjClosePrice,volume,ticker"></property>
					</bean>
				</property>
				<property name="fieldSetMapper">
					<bean class="org.springframework.batch.item.file.mapping.BeanWrapperFieldSetMapper">
						<property name="TargetType" value="learnjava.practice.springbatch.model.EodData">
						</property>
					</bean>
				</property>
			</bean>

		</property>
	</bean>
	<bean id="mysqlItemWriter"
		class="org.springframework.batch.item.database.JdbcBatchItemWriter">
		<property name="dataSource" ref="dataSource" />
		<property name="sql">
			<value>
            <![CDATA[        
            	insert into HIST_EOD_DATA(TICKER,VOLUME,CLOSE_PRICE,OPEN_PRICE,HIGH_PRICE,LOW_PRICE,ADJ_CLOSE_PRICE,TIME_STAMP) 
			values (:ticker, :volume, :closePrice, :openPrice,:highPrice,:lowPrice,:adjClosePrice,:timeStamp)
            ]]>
			</value>
		</property>
		<!-- It will take care matching between object property and sql name parameter -->
		<property name="itemSqlParameterSourceProvider">
			<bean
				class="org.springframework.batch.item.database.BeanPropertyItemSqlParameterSourceProvider" />
		</property>

	</bean>


</beans>